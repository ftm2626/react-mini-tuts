Strict Equality Operator (===)
In JavaScript, the strict equality operator === compares both the value and the type of two operands. This means that it will only return true if both the value and the type are identical.
"5" === "5"   // true
In this case, both the value and the type are the same, so the result is true.
"5" === 5   // false



Object.is
The Object.is() static method determines whether two values are the same value.

console.log(Object.is('1', 1));
// Expected output: false

console.log(Object.is(NaN, NaN));
// Expected output: true

console.log(Object.is(-0, 0));
// Expected output: false

const obj = {};
console.log(Object.is(obj, {}));
// Expected output: false

javascript equality algorithm

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness



isLooselyEqual
isLooselyEqual checks whether its two operands are equal, returning a Boolean result. It attempts to convert and compare operands that are of different types.

isStrictlyEqual
isStrictlyEqual checks whether its two operands are equal, returning a Boolean result. It always considers operands of different types to be different.

Same value zero
SameValueZero equality determines whether two values are functionally identical in all contexts with +0 and -0 are also considered equal.

Same value
SameValue equality determines whether two values are functionally identical in all contexts.